stages:
    - build
    - test
    - tag
    - deploy

build:
  image: docker:latest
  stage: build
  interruptible: true
  only:
    - master
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"

test:
  image: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  stage: test
  interruptible: true
  dependencies:
    - build
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - env/
  before_script:
    - dnf install -y redis
    - source /app/venv/bin/activate
    - pip install mypy
    - redis-server &
  script:
    - pytest --cov=lvfs --cov=plugins --cov=pkgversion --cov=infparser --cov=cabarchive --cov-fail-under=60
    - /app/venv/bin/python ./pylint_test.py

docs:
  image: alpine:latest
  stage: deploy
  interruptible: true
  allow_failure: true
  variables:
    TOKEN: "$RTD_TOKEN"
  script:
    - apk --no-cache add curl
    - ash build-docs.sh
  only:
    - master

tag:
  image: docker:latest
  services:
    - docker:dind
  stage: tag
  interruptible: true
  when: manual
  dependencies:
    - test
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"
    
deploy application:
  stage: deploy
  image: python:latest
  interruptible: true
  dependencies:
    - tag
  when: manual
  script:
    - pip install awscli
    - aws ecs update-service --cluster "$FARGATE_PROD_CLUSTER" --service "$FARGATE_PROD_WEB_SERVICE" --force-new-deployment --region us-west-2
  only:
    - master

deploy metadata:
  stage: deploy
  image: python:latest
  interruptible: true
  when: manual
  dependencies:
  - tag
  script:
    - pip install awscli
    - aws ecs update-service --cluster "$FARGATE_PROD_CLUSTER" --service "$FARGATE_PROD_METADATA_SERVICE" --force-new-deployment --region us-west-2
  only:
    - master

deploy beat:
  stage: deploy
  image: python:latest
  interruptible: true
  when: manual
  dependencies:
    - tag
  script:
    - pip install awscli
    - aws ecs update-service --cluster "$FARGATE_PROD_CLUSTER" --service "$FARGATE_PROD_BEAT_SERVICE" --force-new-deployment --region us-west-2
  only:
    - master
